// Minable Grid Core

/* =================== Basic usage ===================

<div class="min-container">     Sets outer max-width container (auto centered, optional)
  <div class="min-g">           Sets responive row container, negative margin to counters outer margin
    <div class="min-u-1-4">     Sets 1/4 width element
      <div class="min-inner">
        Content
      </div>
    </div>
    <div class="min-u-3-4">     Sets 3/4 width element
      <div class="min-inner">
        Content
      </div>
    </div>
  </div>
</div>

*/

// Requried variables - leaves these be.
$breakpoints: false !default; // Required for the grid extender
$site-usable-gutter: strip-unit($site-gutter) / 2; // Cuts the defined gutter in half for use as padding

// Set these options in settings.scss!
$min-class-output: true !default;
$min-ie7-support: true !default;

// This element would wrap any outer most elements to restrict them to the $site-width, setting this on the .min-g causes issues prevents the gutter offset from taking effect.
.min-container {
  max-width: $site-width;
  margin-left: auto;
  margin-right: auto;
}

// Set a negative offset for gutter padding
.min-g {
  display: -webkit-flex;
  -webkit-flex-flow: row wrap;
  // IE10 uses display: flexbox
  display: -ms-flexbox;
  -ms-flex-flow: row wrap;

  font-size: 0;

  // Gutter offset to prevent outermost gutter
  margin-right: -#{$site-usable-gutter}px;
  margin-left: -#{$site-usable-gutter}px;
}

// We want this to apply to our custom grids as well.
[class *= "min-u"] {
  display: inline-block;
  *display: inline;
  font-size: $browser-default-font-size;
  vertical-align: top;
  zoom: 1;

  @if $min-ie7-support == false {
    .min-inner {
      padding-right: #{$site-usable-gutter}px;
      padding-left: #{$site-usable-gutter}px;
    }
  }
}

@if $min-ie7-support {
  .min-inner {
    padding-right: #{$site-usable-gutter}px;
    padding-left: #{$site-usable-gutter}px;
  }
}

.centered {
  margin: 0 auto;
}